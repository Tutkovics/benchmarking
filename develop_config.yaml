### Used ###
prometheus:
  deploy: "False"
  name: "prometheus"
  repo: "stable/prometheus"
  namespace: "metrics"  
  options:
    server.service.type: "NodePort"
    server.service.nodePort: "30000"

application:  # change to helm
  name: "happy-panda"
  repo: "bitnami/node"
  namespace: "default"
  options:
    applicationPort: "4000"
  vertical: "resources.limits.memory"  # parameter to change with Helm to vertical scale
  horizontal: "replicas"  # parameter to change with Helm to horizontal scale

loader:
  name: "locust"
  #repo: "presslabs/locust"
  repo: "stable/locust"
  namespace: "metrics"
  options:
    service.nodePort: "30001"
    worker.replicaCount: "4"
    master.config.target-host: "http://site.example.com"


cluster:
  ip: "192.168.99.111"
  name: "szakdoga" # configure kubectl in multicluster environment

### Not Used ###
develop:
  mode: "develop" # some functions need to call in different mode (eg: benchmark, develop)
  log_level: "debug"

  worker_node:  "minikube" # worker node's name
  benchmark_node: "minikube"



benchmark:
  tool:
    name: "fortio"
    image: "fortio/fortio:latest_release"
    port: "8080"
  time: "60" # benchmark run time
  qps_min: "400" # minimum requested qps
  qps_max: "40000" # maximum requested qps
  qps_granularity: "100" # granularity of qps
  # batch measurement
  pods: "1" #, '2', '3', '4']" # number of application pods in measurements
  cpu: "100m" #, '100m', '100m', '100m']" # cpu limit / pod
  memory: "64Mi" #, '64Mi', '64Mi', '64Mi']" # memory limit / pod
  save_results: "True" # save results to .json file
